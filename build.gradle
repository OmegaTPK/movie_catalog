plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

task runApp(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath

	mainClass = 'com.example.moviecatalog.MovieCatalogApplication'

}

// Using and creating an Executable Jar
jar {
	manifest {
		attributes('Main-Class': 'com.example.moviecatalog.MovieCatalogApplication')
	}
}

task runExecutableJar(type: JavaExec) {
	// Executable jars can have only _one_ jar on the classpath.
	classpath = files(tasks.jar)
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework:spring-web'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.postgresql:postgresql:42.3.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core:8.5.11'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

tasks.named('test') {
	useJUnitPlatform()
}